server.port=${PORT:8080}
logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
# PostgreSQL configuration.
spring.datasource.url = jdbc:postgresql://db:5432/dbtest
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto = create

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# To improve the performance during development.
# For more information https://vaadin.com/docs/latest/integrations/spring/configuration#special-configuration-parameters
vaadin.allowed-packages = com.vaadin,org.vaadin,com.example.application
spring.jpa.defer-datasource-initialization = true
spring.sql.init.mode = always

# Configuración de Vaadin para Docker
# Guardar este archivo como src/main/resources/application-docker.properties

# Evitar limpieza de node_modules
vaadin.skip.node.modules.cleaning=true

# Configurar directorios para Vaadin
vaadin.frontend.frontend.folder=/app/frontend
vaadin.folder=/app

# Modo desarrollo
vaadin.productionMode=false

# Habilitar hotswap
spring.devtools.restart.enabled=true

# Configuración para actualización automática
vaadin.devmode.webpack.running.timeout=300
vaadin.devmode.webpack.success.pattern=compiled successfully

# Configuración de CORS
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Configuración de WebSocket
vaadin.devmode.webpack.port=8080
vaadin.devmode.webpack.host=0.0.0.0